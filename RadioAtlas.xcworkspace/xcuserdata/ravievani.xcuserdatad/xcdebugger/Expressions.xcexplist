<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "MapViewController.mapView(MKMapView, didSelect : MKAnnotationView) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "regionChangedBecauseAnnotationSelected">
            </PersistentString>
            <PersistentString
               value = "view.image">
            </PersistentString>
            <PersistentString
               value = "view.image?.description">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TableViewController.navigate(annotation : PinAnnotation) -&gt; ():TableViewController.swift">
      </ContextState>
      <ContextState
         contextName = "AppDelegate.checkOrientation(viewController : UIViewController?) -&gt; Int:AppDelegate.swift">
      </ContextState>
      <ContextState
         contextName = "SettingsController.tableView(UITableView, didSelectRowAt : IndexPath) -&gt; ():SettingsController.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
            <PersistentString
               value = "currentCell.textLabel!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.observeValue(forKeyPath : String?, of : Any?, change : [NSKeyValueChangeKey : Any]?, context : UnsafeMutableRawPointer?) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.currentItem.accessLog().extendedLogDataStringEncoding">
            </PersistentString>
            <PersistentString
               value = "NSString(Music.sharedInstance.audioPlayer.currentItem.accessLog().extendedLogData())">
            </PersistentString>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.currentItem.accessLog()">
            </PersistentString>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.currentItem.accessLog().extendedLogData()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MKMapView.setZoomByDelta(delta : Double, animated : Bool, center : CLLocationCoordinate2D) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "_span.longitudeDelta">
            </PersistentString>
            <PersistentString
               value = "_span.latitudeDelta">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.findClosestStation(annotations : [PinAnnotation], coordinate : CLLocationCoordinate2D) -&gt; MKAnnotation:MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "UITableViewCell.prepareDisclosureIndicator() -&gt; ():SettingsController.swift">
         <PersistentStrings>
            <PersistentString
               value = "image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.playTunerAudio() -&gt; ():MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.playMusic(music : String) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "NSURL(string: music)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.(willEnterForeground() -&gt; ()).(closure #1):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.pausedTime.rawValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.playFromAnnotation(annotation : PinAnnotation) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "prevStationHistory">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.(mapView(MKMapView, didSelect : MKAnnotationView) -&gt; ()).(closure #1):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "view.annotation">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.mapView(MKMapView, viewFor : MKAnnotation) -&gt; MKAnnotationView?:MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "annotation.coordinate">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SettingsController.viewDidLoad() -&gt; ():SettingsController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.dropAnnotation(annotation : PinAnnotation) -&gt; ():MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.playFromFavorites(annotation : PinAnnotation) -&gt; ():MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.playAndPauseBarAction(Any) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.currentItem.duration">
            </PersistentString>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.currentItem.accessLog().events.count">
            </PersistentString>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.rate">
            </PersistentString>
            <PersistentString
               value = "Music.sharedInstance.audioPlayer.status">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.updateLatLongIfFavorite(annotation : PinAnnotation) -&gt; PinAnnotation:MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "annotation.coordinate">
            </PersistentString>
            <PersistentString
               value = "(found as! Station).longitude">
            </PersistentString>
            <PersistentString
               value = "annotation.latitude">
            </PersistentString>
            <PersistentString
               value = "(found as! Station).latitude">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MapViewController.findClosestStation(annotations : [PinAnnotation], coordinate : CLLocationCoordinate2D) -&gt; PinAnnotation:MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.(mapView(MKMapView, regionDidChangeAnimated : Bool) -&gt; ()).(closure #1):MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "ceil(zoomExponent)">
            </PersistentString>
            <PersistentString
               value = "playNext">
            </PersistentString>
            <PersistentString
               value = "self.regionChangedBecauseAnnotationSelected">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "specialized MapViewController.(mapView(MKMapView, regionDidChangeAnimated : Bool) -&gt; ()).(closure #1).(closure #2):MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.(didDragMap(gestureRecognizer : UIGestureRecognizer) -&gt; ()).(closure #1):MapViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MapViewController.reWindAction(Any) -&gt; ():MapViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "nextStationHistory">
            </PersistentString>
            <PersistentString
               value = "skipRegionClustering">
            </PersistentString>
            <PersistentString
               value = "prevStationHistory">
            </PersistentString>
            <PersistentString
               value = "playNext">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
